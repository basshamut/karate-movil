name: Build Android APK

on:
  push:
    branches:
      - master # Cambia esto a tu rama principal
  workflow_dispatch: # Permite ejecutar el flujo manualmente

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      # Clonar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v3

      # Configurar Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18 # Asegúrate de usar una versión compatible con Expo

      # Instalar dependencias
      - name: Install dependencies
        run: npm install

      # Configurar EAS CLI
      - name: Install EAS CLI
        run: npm install -g eas-cli

      # Cargar y configurar el Keystore
      - name: Configure Keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > keystore.jks
          ls -l keystore.jks # Verifica que el archivo se creó correctamente

      # Generar el APK
      - name: Build APK
        env:
          EAS_NO_VCS: 1 # Evita errores relacionados con Git
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          ANDROID_KEYSTORE: keystore.jks
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: eas build --platform android --profile preview --non-interactive

      # Depurar errores (si ocurren)
      - name: Debug Build Logs
        run: cat .eas/output.log || true

      # Descargar el APK
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release.apk
          path: dist/*.apk
